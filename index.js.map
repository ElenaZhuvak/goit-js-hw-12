{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst BASIC_URL = 'https://pixabay.com/api/';\nconst KEY_API = '46224221-307a76b395d66c959be951e41';\n\nexport async function fetchImages(query) {\n    try {\n        const response = await axios.get(BASIC_URL, {\n            params: {\n                key: KEY_API,\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n            }\n        });\n\n        const images = response.data.hits;\n                if (images.length === 0) {\n                    iziToast.error({\n                        title: 'Error',\n                        message: `Sorry, there are no images matching your search ${query}. Please try again!`,\n                        position: \"topRight\",\n                    });\n                    return [];\n                }\n        return images;\n    }\n        \n    catch (error) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Illegal operation',\n                position: \"topRight\",\n            });\n            return [];\n        }\n    }","export function renderGallery (images) {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = '';\n\n    const markup = images.map(image => `\n        <li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n                <img \n                    class=\"gallery-image\" \n                    src=\"${image.webformatURL}\" \n                    alt=\"${image.tags}\" \n                    loading=\"lazy\"\n                />\n                <div class=\"image-info\">\n                    <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n                    <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n                    <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n                    <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n                </div>\n            </a>\n        </li>\n    `).join('');\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nconst loaderContainer = document.querySelector('.loader-container');\nexport function showLoader() {\n    loaderContainer.classList.remove('hidden');\n}\nexport function hideLoader() {\n    loaderContainer.classList.add('hidden')\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport {fetchImages} from './js/pixabay-api';\nimport {renderGallery, showLoader, hideLoader} from './js/render-functions';\nlet lightbox;\n\nconst form = document.querySelector('.js-search-form');\nconst gallery = document.querySelector('.gallery');\n\nform.addEventListener('submit', onSubmit);\n\nasync function onSubmit(event) {\n    event.preventDefault();\n    const query = form.elements.searchInput.value.trim();\n\n        if (query === '') {\n            iziToast.warning({\n                message: 'Please fill in the field',\n                position: \"topRight\",\n            });\n            return;\n        }\n    gallery.innerHTML = '';\n    showLoader();\n\n    try {\n        const images = await fetchImages(query);\n        if (images.length > 0) {\n            renderGallery(images);\n            initializeLightbox();\n        }\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'An error occurred while fetching images. Please try again',\n            position: \"topRight\",\n        });\n    }\n    hideLoader();\n    form.reset();\n}\n\nfunction initializeLightbox () {\n    if (lightbox) {\n        lightbox.refresh();\n    } else {\n        lightbox = new SimpleLightbox('.gallery a', {\n            captions: true,\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n    }\n}\n"],"names":["BASIC_URL","KEY_API","fetchImages","query","images","axios","iziToast","renderGallery","gallery","markup","image","loaderContainer","showLoader","hideLoader","lightbox","form","onSubmit","event","initializeLightbox","SimpleLightbox"],"mappings":"owBAIA,MAAMA,EAAY,2BACZC,EAAU,qCAET,eAAeC,EAAYC,EAAO,CACrC,GAAI,CAWA,MAAMC,GAVW,MAAMC,EAAM,IAAIL,EAAW,CACxC,OAAQ,CACJ,IAAKC,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACb,CAAS,GAEuB,KAAK,KACrB,OAAIC,EAAO,SAAW,GAClBE,EAAS,MAAM,CACX,MAAO,QACP,QAAS,mDAAmDH,CAAK,sBACjE,SAAU,UAClC,CAAqB,EACM,IAEZC,CACV,MAEa,CACN,OAAAE,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oBACT,SAAU,UAC1B,CAAa,EACM,EACV,CACT,CCvCO,SAASC,EAAeH,EAAQ,CACnC,MAAMI,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,GAEpB,MAAMC,EAASL,EAAO,IAAIM,GAAS;AAAA;AAAA,4CAEKA,EAAM,aAAa;AAAA;AAAA;AAAA,2BAGpCA,EAAM,YAAY;AAAA,2BAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,yDAIoBA,EAAM,KAAK;AAAA,yDACXA,EAAM,KAAK;AAAA,4DACRA,EAAM,QAAQ;AAAA,6DACbA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,KAIvE,EAAE,KAAK,EAAE,EAEVF,EAAQ,mBAAmB,YAAaC,CAAM,CAClD,CAEA,MAAME,EAAkB,SAAS,cAAc,mBAAmB,EAC3D,SAASC,GAAa,CACzBD,EAAgB,UAAU,OAAO,QAAQ,CAC7C,CACO,SAASE,GAAa,CACzBF,EAAgB,UAAU,IAAI,QAAQ,CAC1C,CCzBA,IAAIG,EAEJ,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CP,EAAU,SAAS,cAAc,UAAU,EAEjDO,EAAK,iBAAiB,SAAUC,CAAQ,EAExC,eAAeA,EAASC,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMd,EAAQY,EAAK,SAAS,YAAY,MAAM,OAE1C,GAAIZ,IAAU,GAAI,CACdG,EAAS,QAAQ,CACb,QAAS,2BACT,SAAU,UAC1B,CAAa,EACD,MACH,CACLE,EAAQ,UAAY,GACpBI,IAEA,GAAI,CACA,MAAMR,EAAS,MAAMF,EAAYC,CAAK,EAClCC,EAAO,OAAS,IAChBG,EAAcH,CAAM,EACpBc,IAEP,MAAe,CACZZ,EAAS,MAAM,CACX,MAAO,QACP,QAAS,4DACT,SAAU,UACtB,CAAS,CACJ,CACDO,IACAE,EAAK,MAAK,CACd,CAEA,SAASG,GAAsB,CACvBJ,EACAA,EAAS,QAAO,EAEhBA,EAAW,IAAIK,EAAe,aAAc,CACxC,SAAU,GACV,aAAc,MACd,aAAc,GAC1B,CAAS,CAET"}